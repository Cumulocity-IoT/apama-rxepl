using utils.TestObservables;
using utils.Test;
using utils.ExpectValues;

using com.industry.rx_epl.Observable;
using com.industry.rx_epl.IResolver;
using com.industry.rx_epl.Subscriber;

monitor TestObservable {
	Test test := Test("TestResult");
	
	action onload() {
		on utils.KeepAliveUntilTerminated() {}
	    any discard := Observable.create(generator)
	      	.flatMap(noOpFlatMapper)
			.take(1)
	      	.subscribe(Subscriber.create());
	} 
	
	action generator(IResolver resolver) {
		resolver.onUnsubscribe(test.complete);
		resolver.next(1);
	}
	
	action noOpFlatMapper(any value) returns any {
		return [value];
	}
}
