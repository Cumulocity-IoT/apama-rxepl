using com.industry.rx_epl.Observable;
using com.industry.rx_epl.IObservable;
using com.industry.rx_epl.ISubscription;
using com.industry.rx_epl.IDisposable;

using utils.Test;
using utils.TestObservables;
using utils.ExpectValues;

monitor TestObservable {
	Test test := Test("TestResult");

	integer teardownCount := 0;
	
	
	action onload() {
		on utils.KeepAliveUntilTerminated() {}
		IDisposable disposable := TestObservables.createAsync()
			.take(3)
			.do(ExpectValues.create([<any>0.0,1.0,2.0], countTeardowns, test.fail))
  			.observeToChannel("TestChannel");
		
		ISubscription downstreamSubscription := Observable.observeFromChannel("TestChannel")
  			.subscribe(ExpectValues.create([<any>0.0,1.0,2.0], countTeardowns, test.fail));
	}
	
	action countTeardowns() {
		teardownCount := teardownCount + 1;
		if teardownCount = 2 {
			test.complete();
		}
	}
}
