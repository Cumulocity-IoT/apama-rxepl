using utils.TestObservables;
using utils.Test;
using utils.ExpectValues;

monitor TestObservable {
	Test test := Test("TestResult");
  
	action onload() {
		on utils.KeepAliveUntilTerminated() {}
	    any discard := TestObservables.createAsync().take(2)
	      .concat([TestObservables.createAsync().take(3)])
	      .subscribe(ExpectValues.create([<any>0.0, 1.0, 0.0, 1.0, 2.0], test.complete, test.fail));
	}  
}
