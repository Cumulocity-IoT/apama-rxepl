using utils.Test;
using utils.ExpectValues;

using com.industry.rx_epl.Observable;
using com.industry.rx_epl.IObservable;
using com.industry.rx_epl.Subscriber;

monitor TestObservable {
	Test test := Test("TestResult");
  
	action onload() {
		on utils.KeepAliveUntilTerminated() {}		
		any discard := Observable.fromValues([<any>0,1,2,3])
							.windowTime(1.0)
							.subscribe(Subscriber.create().onNext(subscribeToEachWindow).onComplete(onTeardown));
	} 
	
	integer teardownCount;
	action onTeardown() {
		teardownCount := teardownCount + 1;
		if teardownCount = 2 {
			test.complete();
		} else if teardownCount > 2 {
			test.fail("Received unexpected teardown");
		}
	}
	
	integer i := 0;
	action subscribeToEachWindow(any value) {
		if i = 0 {
			any subscription := (<IObservable> value).subscribe(ExpectValues.create([<any>0,1,2,3], onTeardown, test.fail));
		} else {
			test.fail("Unexpected group received");
		}
		i := i + 1;
	}
}
