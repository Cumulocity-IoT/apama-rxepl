using utils.Test;
using utils.ExpectValues;

using com.industry.rx_epl.Observable;
using com.industry.rx_epl.LoggingSubscriber;

monitor TestObservable {
	Test test := Test("TestResult");
  
	action onload() {
		on utils.KeepAliveUntilTerminated() {}
		any discard := Observable.fromValues([<any>
	              Observable.range(0,3).do(LoggingSubscriber.create("source1")),
	              Observable.fromValues([4,5,6]).do(LoggingSubscriber.create("source2")), 
	              Observable.range(7,9).do(LoggingSubscriber.create("source3")),
	              [10,11,12]
	      ])
			.concatAll()
			.do(LoggingSubscriber.create("Output"))
		   	.subscribe(ExpectValues.create([<any>0,1,2,3,4,5,6,7,8,9,10,11,12], test.complete, test.fail));
	}  
}
