using utils.TestObservables;
using utils.Test;
using utils.ExpectValues;

event E {
	string field1;
}

monitor TestObservable {
	Test test := Test("TestResult");
  
	action onload() {
		on utils.KeepAliveUntilTerminated() {}
	    any discard := TestObservables.createAsync()
			.take(3)
	      	.map(toEvent)
			.pluck("field1")
	      	.subscribe(ExpectValues.create([<any>"0", "1", "2"], test.complete, test.fail));
	} 
	
	action toEvent(any value) returns any {
		return E(value.valueToString());
	}
}
